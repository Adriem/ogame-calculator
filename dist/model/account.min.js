module.factory("Account",function(Planet){var Account;return Account=function(plasmaLevel,geologist,planets){return null==plasmaLevel&&(plasmaLevel=0),null==geologist&&(geologist=!1),null==planets&&(planets=[]),this.plasmaLevel=plasmaLevel,this.geologist=geologist,this.planets=planets,null},Account.prototype.addPlanet=function(planet){return this.planets.push(planet),null},Account.prototype.removePlanet=function(index){return this.planets.splice(index,1),null},Account.prototype.movePlanet=function(startPos,finalPos){var auxPlanet;return auxPlanet=this.planets[startPos],this.removePlanet(startPos),this.planets.splice(finalPos,0,auxPlanet)},Account.prototype.getMetalProduction=function(){var i,len,planet,production,ref;for(production=0,ref=this.planets,i=0,len=ref.length;len>i;i++)planet=ref[i],production+=planet.getMetalProduction(this.plasmaLevel,this.geologist);return production},Account.prototype.getCrystalProduction=function(){var i,len,planet,production,ref;for(production=0,ref=this.planets,i=0,len=ref.length;len>i;i++)planet=ref[i],production+=planet.getCrystalProduction(this.plasmaLevel,this.geologist);return production},Account.prototype.getDeuteriumProduction=function(){var i,len,planet,production,ref;for(production=0,ref=this.planets,i=0,len=ref.length;len>i;i++)planet=ref[i],production+=planet.getDeuteriumProduction(this.plasmaLevel,this.geologist);return production},Account.getFromJSON=function(jsonObject){var planet;return null!=jsonObject?(out.success("Data loaded successfully"),new Account(jsonObject.plasmaLevel,jsonObject.geologist,function(){var i,len,ref,results;for(ref=jsonObject.planets,results=[],i=0,len=ref.length;len>i;i++)planet=ref[i],results.push(Planet.getFromJSON(planet));return results}())):new Account},Account});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVsL2FjY291bnQuY29mZmVlIiwibW9kZWwvYWNjb3VudC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJmYWN0b3J5IiwiUGxhbmV0IiwiQWNjb3VudCIsInBsYXNtYUxldmVsIiwiZ2VvbG9naXN0IiwicGxhbmV0cyIsInRoaXMiLCJwcm90b3R5cGUiLCJhZGRQbGFuZXQiLCJwbGFuZXQiLCJwdXNoIiwicmVtb3ZlUGxhbmV0IiwiaW5kZXgiLCJzcGxpY2UiLCJtb3ZlUGxhbmV0Iiwic3RhcnRQb3MiLCJmaW5hbFBvcyIsImF1eFBsYW5ldCIsImdldE1ldGFsUHJvZHVjdGlvbiIsImkiLCJsZW4iLCJwcm9kdWN0aW9uIiwicmVmIiwibGVuZ3RoIiwiZ2V0Q3J5c3RhbFByb2R1Y3Rpb24iLCJnZXREZXV0ZXJpdW1Qcm9kdWN0aW9uIiwiZ2V0RnJvbUpTT04iLCJqc29uT2JqZWN0Iiwib3V0Iiwic3VjY2VzcyIsInJlc3VsdHMiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxRQUFRLFVBQVcsU0FBQ0MsUUFFekIsR0FBQUMsUUFnREEsT0FoREFBLFNBQVUsU0FBQ0MsWUFBaUJDLFVBQW1CQyxTQ2E3QyxNQVptQixPQUFmRixjRERLQSxZQUFjLEdDSU4sTUFBYkMsWURKc0JBLFdBQVksR0NPdkIsTUFBWEMsVURQeUNBLFlBQzdDQyxLQUFDSCxZQUFjQSxZQUNmRyxLQUFDRixVQUFZQSxVQUNiRSxLQUFDRCxRQUFVQSxRQUNYLE1BRUZILFFBQVFLLFVBQVVDLFVBQVksU0FBQ0MsUUNXN0IsTURWQUgsTUFBQ0QsUUFBUUssS0FBS0QsUUFDZCxNQUVGUCxRQUFRSyxVQUFVSSxhQUFlLFNBQUNDLE9DV2hDLE1EVkFOLE1BQUNELFFBQVFRLE9BQU9ELE1BQU8sR0FDdkIsTUFFRlYsUUFBUUssVUFBVU8sV0FBYSxTQUFDQyxTQUFVQyxVQUN4QyxHQUFBQyxVQ1lBLE9EWkFBLFdBQVlYLEtBQUNELFFBQVFVLFVBQ3JCVCxLQUFDSyxhQUFhSSxVQUNkVCxLQUFDRCxRQUFRUSxPQUFPRyxTQUFVLEVBQUdDLFlBRS9CZixRQUFRSyxVQUFVVyxtQkFBcUIsV0FDckMsR0FBQUMsR0FBQUMsSUFBQVgsT0FBQVksV0FBQUMsR0FDQSxLQURBRCxXQUFhLEVBQ2JDLElBQUFoQixLQUFBRCxRQUFBYyxFQUFBLEVBQUFDLElBQUFFLElBQUFDLE9BQUFILElBQUFELEVBQUFBLElDYUVWLE9BQVNhLElBQUlILEdEWmJFLFlBQWNaLE9BQU9TLG1CQUFtQlosS0FBQ0gsWUFBYUcsS0FBQ0YsVUNlekQsT0RkQWlCLGFBRUZuQixRQUFRSyxVQUFVaUIscUJBQXVCLFdBQ3ZDLEdBQUFMLEdBQUFDLElBQUFYLE9BQUFZLFdBQUFDLEdBQ0EsS0FEQUQsV0FBYSxFQUNiQyxJQUFBaEIsS0FBQUQsUUFBQWMsRUFBQSxFQUFBQyxJQUFBRSxJQUFBQyxPQUFBSCxJQUFBRCxFQUFBQSxJQ2lCRVYsT0FBU2EsSUFBSUgsR0RoQmJFLFlBQWNaLE9BQU9lLHFCQUFxQmxCLEtBQUNILFlBQWFHLEtBQUNGLFVDbUIzRCxPRGxCQWlCLGFBRUZuQixRQUFRSyxVQUFVa0IsdUJBQXlCLFdBQ3pDLEdBQUFOLEdBQUFDLElBQUFYLE9BQUFZLFdBQUFDLEdBQ0EsS0FEQUQsV0FBYSxFQUNiQyxJQUFBaEIsS0FBQUQsUUFBQWMsRUFBQSxFQUFBQyxJQUFBRSxJQUFBQyxPQUFBSCxJQUFBRCxFQUFBQSxJQ3FCRVYsT0FBU2EsSUFBSUgsR0RwQmJFLFlBQWNaLE9BQU9nQix1QkFBdUJuQixLQUFDSCxZQUFhRyxLQUFDRixVQ3VCN0QsT0R0QkFpQixhQUdGbkIsUUFBUXdCLFlBQWMsU0FBQ0MsWUFDckIsR0FBQWxCLE9BQUEsT0FBRyxPQUFBa0IsWUFDREMsSUFBSUMsUUFBUSw0QkFDUixHQUFBM0IsU0FDRnlCLFdBQVd4QixZQUNYd0IsV0FBV3ZCLFVBRlQsV0N5QkYsR0FBSWUsR0FBR0MsSUFBS0UsSUFBS1EsT0FHakIsS0R6QkNSLElBQUFLLFdBQUF0QixRQUFBeUIsV0FBQVgsRUFBQSxFQUFBQyxJQUFBRSxJQUFBQyxPQUFBSCxJQUFBRCxFQUFBQSxJQzBCQ1YsT0FBU2EsSUFBSUgsR0QxQmRXLFFBQUFwQixLQUFBVCxPQUFPeUIsWUFBWWpCLFFDNkJwQixPQUFPcUIsY0QzQkYsR0FBQTVCLFVBRUpBIiwiZmlsZSI6Im1vZGVsL2FjY291bnQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmZhY3RvcnkgJ0FjY291bnQnLCAoUGxhbmV0KSAtPlxyXG5cclxuICBBY2NvdW50ID0gKHBsYXNtYUxldmVsID0gMCwgZ2VvbG9naXN0ID0gZmFsc2UsIHBsYW5ldHMgPSBbXSkgLT5cclxuICAgIEBwbGFzbWFMZXZlbCA9IHBsYXNtYUxldmVsXHJcbiAgICBAZ2VvbG9naXN0ID0gZ2VvbG9naXN0XHJcbiAgICBAcGxhbmV0cyA9IHBsYW5ldHMgIyBUaGlzIGlzIG5vdCBzYWZlIVxyXG4gICAgbnVsbFxyXG5cclxuICBBY2NvdW50LnByb3RvdHlwZS5hZGRQbGFuZXQgPSAocGxhbmV0KSAtPlxyXG4gICAgQHBsYW5ldHMucHVzaChwbGFuZXQpXHJcbiAgICBudWxsXHJcblxyXG4gIEFjY291bnQucHJvdG90eXBlLnJlbW92ZVBsYW5ldCA9IChpbmRleCkgLT5cclxuICAgIEBwbGFuZXRzLnNwbGljZShpbmRleCwgMSlcclxuICAgIG51bGxcclxuXHJcbiAgQWNjb3VudC5wcm90b3R5cGUubW92ZVBsYW5ldCA9IChzdGFydFBvcywgZmluYWxQb3MpIC0+XHJcbiAgICBhdXhQbGFuZXQgPSBAcGxhbmV0c1tzdGFydFBvc11cclxuICAgIEByZW1vdmVQbGFuZXQoc3RhcnRQb3MpXHJcbiAgICBAcGxhbmV0cy5zcGxpY2UoZmluYWxQb3MsIDAsIGF1eFBsYW5ldClcclxuXHJcbiAgQWNjb3VudC5wcm90b3R5cGUuZ2V0TWV0YWxQcm9kdWN0aW9uID0gLT5cclxuICAgIHByb2R1Y3Rpb24gPSAwXHJcbiAgICBmb3IgcGxhbmV0IGluIEBwbGFuZXRzXHJcbiAgICAgIHByb2R1Y3Rpb24gKz0gcGxhbmV0LmdldE1ldGFsUHJvZHVjdGlvbihAcGxhc21hTGV2ZWwsIEBnZW9sb2dpc3QpXHJcbiAgICBwcm9kdWN0aW9uXHJcblxyXG4gIEFjY291bnQucHJvdG90eXBlLmdldENyeXN0YWxQcm9kdWN0aW9uID0gLT5cclxuICAgIHByb2R1Y3Rpb24gPSAwXHJcbiAgICBmb3IgcGxhbmV0IGluIEBwbGFuZXRzXHJcbiAgICAgIHByb2R1Y3Rpb24gKz0gcGxhbmV0LmdldENyeXN0YWxQcm9kdWN0aW9uKEBwbGFzbWFMZXZlbCwgQGdlb2xvZ2lzdClcclxuICAgIHByb2R1Y3Rpb25cclxuXHJcbiAgQWNjb3VudC5wcm90b3R5cGUuZ2V0RGV1dGVyaXVtUHJvZHVjdGlvbiA9IC0+XHJcbiAgICBwcm9kdWN0aW9uID0gMFxyXG4gICAgZm9yIHBsYW5ldCBpbiBAcGxhbmV0c1xyXG4gICAgICBwcm9kdWN0aW9uICs9IHBsYW5ldC5nZXREZXV0ZXJpdW1Qcm9kdWN0aW9uKEBwbGFzbWFMZXZlbCwgQGdlb2xvZ2lzdClcclxuICAgIHByb2R1Y3Rpb25cclxuXHJcbiAgIyMjIFNUQVRJQyBNRVRIT0QgIyMjXHJcbiAgQWNjb3VudC5nZXRGcm9tSlNPTiA9IChqc29uT2JqZWN0KSAtPlxyXG4gICAgaWYganNvbk9iamVjdD9cclxuICAgICAgb3V0LnN1Y2Nlc3MgXCJEYXRhIGxvYWRlZCBzdWNjZXNzZnVsbHlcIlxyXG4gICAgICBuZXcgQWNjb3VudChcclxuICAgICAgICBqc29uT2JqZWN0LnBsYXNtYUxldmVsLFxyXG4gICAgICAgIGpzb25PYmplY3QuZ2VvbG9naXN0LFxyXG4gICAgICAgIChQbGFuZXQuZ2V0RnJvbUpTT04ocGxhbmV0KSBmb3IgcGxhbmV0IGluIGpzb25PYmplY3QucGxhbmV0cylcclxuICAgICAgKVxyXG4gICAgZWxzZSBuZXcgQWNjb3VudCgpXHJcblxyXG4gIHJldHVybiBBY2NvdW50IixudWxsXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=