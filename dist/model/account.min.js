module.factory("Account",function(Planet){var Account;return Account=function(plasmaLevel,geologist,planets){return null==plasmaLevel&&(plasmaLevel=0),null==geologist&&(geologist=!1),null==planets&&(planets=[]),this.plasmaLevel=plasmaLevel,this.geologist=geologist,this.planets=planets,null},Account.prototype.addPlanet=function(planet){return this.planets.push(planet),null},Account.prototype.removePlanet=function(index){return this.planets.splice(index,1),null},Account.prototype.getMetalProduction=function(){var i,len,planet,production,ref;for(production=0,ref=this.planets,i=0,len=ref.length;len>i;i++)planet=ref[i],production+=planet.getMetalProduction(this.plasmaLevel,this.geologist);return production},Account.prototype.getCrystalProduction=function(){var i,len,planet,production,ref;for(production=0,ref=this.planets,i=0,len=ref.length;len>i;i++)planet=ref[i],production+=planet.getCrystalProduction(this.plasmaLevel,this.geologist);return production},Account.prototype.getDeuteriumProduction=function(){var i,len,planet,production,ref;for(production=0,ref=this.planets,i=0,len=ref.length;len>i;i++)planet=ref[i],production+=planet.getDeuteriumProduction(this.plasmaLevel,this.geologist);return production},Account.getFromJSON=function(jsonObject){var planet;return null!=jsonObject?(console.log("Data loaded from previous session"),new Account(jsonObject.plasmaLevel,jsonObject.geologist,function(){var i,len,ref,results;for(ref=jsonObject.planets,results=[],i=0,len=ref.length;len>i;i++)planet=ref[i],results.push(Planet.getFromJSON(planet));return results}())):new Account},Account});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVsL2FjY291bnQuY29mZmVlIiwibW9kZWwvYWNjb3VudC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJmYWN0b3J5IiwiUGxhbmV0IiwiQWNjb3VudCIsInBsYXNtYUxldmVsIiwiZ2VvbG9naXN0IiwicGxhbmV0cyIsInRoaXMiLCJwcm90b3R5cGUiLCJhZGRQbGFuZXQiLCJwbGFuZXQiLCJwdXNoIiwicmVtb3ZlUGxhbmV0IiwiaW5kZXgiLCJzcGxpY2UiLCJnZXRNZXRhbFByb2R1Y3Rpb24iLCJpIiwibGVuIiwicHJvZHVjdGlvbiIsInJlZiIsImxlbmd0aCIsImdldENyeXN0YWxQcm9kdWN0aW9uIiwiZ2V0RGV1dGVyaXVtUHJvZHVjdGlvbiIsImdldEZyb21KU09OIiwianNvbk9iamVjdCIsImNvbnNvbGUiLCJsb2ciLCJyZXN1bHRzIl0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBT0MsUUFBUSxVQUFXLFNBQUNDLFFBRXpCLEdBQUFDLFFBMkNBLE9BM0NBQSxTQUFVLFNBQUNDLFlBQWlCQyxVQUFtQkMsU0NhN0MsTUFabUIsT0FBZkYsY0RES0EsWUFBYyxHQ0lOLE1BQWJDLFlESnNCQSxXQUFZLEdDT3ZCLE1BQVhDLFVEUHlDQSxZQUM3Q0MsS0FBQ0gsWUFBY0EsWUFDZkcsS0FBQ0YsVUFBWUEsVUFDYkUsS0FBQ0QsUUFBVUEsUUFDWCxNQUVGSCxRQUFRSyxVQUFVQyxVQUFZLFNBQUNDLFFDVzdCLE1EVkFILE1BQUNELFFBQVFLLEtBQUtELFFBQ2QsTUFFRlAsUUFBUUssVUFBVUksYUFBZSxTQUFDQyxPQ1doQyxNRFZBTixNQUFDRCxRQUFRUSxPQUFPRCxNQUFPLEdBQ3ZCLE1BRUZWLFFBQVFLLFVBQVVPLG1CQUFxQixXQUNyQyxHQUFBQyxHQUFBQyxJQUFBUCxPQUFBUSxXQUFBQyxHQUNBLEtBREFELFdBQWEsRUFDYkMsSUFBQVosS0FBQUQsUUFBQVUsRUFBQSxFQUFBQyxJQUFBRSxJQUFBQyxPQUFBSCxJQUFBRCxFQUFBQSxJQ1lFTixPQUFTUyxJQUFJSCxHRFhiRSxZQUFjUixPQUFPSyxtQkFBbUJSLEtBQUNILFlBQWFHLEtBQUNGLFVDY3pELE9EYkFhLGFBRUZmLFFBQVFLLFVBQVVhLHFCQUF1QixXQUN2QyxHQUFBTCxHQUFBQyxJQUFBUCxPQUFBUSxXQUFBQyxHQUNBLEtBREFELFdBQWEsRUFDYkMsSUFBQVosS0FBQUQsUUFBQVUsRUFBQSxFQUFBQyxJQUFBRSxJQUFBQyxPQUFBSCxJQUFBRCxFQUFBQSxJQ2dCRU4sT0FBU1MsSUFBSUgsR0RmYkUsWUFBY1IsT0FBT1cscUJBQXFCZCxLQUFDSCxZQUFhRyxLQUFDRixVQ2tCM0QsT0RqQkFhLGFBRUZmLFFBQVFLLFVBQVVjLHVCQUF5QixXQUN6QyxHQUFBTixHQUFBQyxJQUFBUCxPQUFBUSxXQUFBQyxHQUNBLEtBREFELFdBQWEsRUFDYkMsSUFBQVosS0FBQUQsUUFBQVUsRUFBQSxFQUFBQyxJQUFBRSxJQUFBQyxPQUFBSCxJQUFBRCxFQUFBQSxJQ29CRU4sT0FBU1MsSUFBSUgsR0RuQmJFLFlBQWNSLE9BQU9ZLHVCQUF1QmYsS0FBQ0gsWUFBYUcsS0FBQ0YsVUNzQjdELE9EckJBYSxhQUdGZixRQUFRb0IsWUFBYyxTQUFDQyxZQUNyQixHQUFBZCxPQUFBLE9BQUcsT0FBQWMsWUFDREMsUUFBUUMsSUFBSSxxQ0FDUixHQUFBdkIsU0FDRnFCLFdBQVdwQixZQUNYb0IsV0FBV25CLFVBRlQsV0N3QkYsR0FBSVcsR0FBR0MsSUFBS0UsSUFBS1EsT0FHakIsS0R4QkNSLElBQUFLLFdBQUFsQixRQUFBcUIsV0FBQVgsRUFBQSxFQUFBQyxJQUFBRSxJQUFBQyxPQUFBSCxJQUFBRCxFQUFBQSxJQ3lCQ04sT0FBU1MsSUFBSUgsR0R6QmRXLFFBQUFoQixLQUFBVCxPQUFPcUIsWUFBWWIsUUM0QnBCLE9BQU9pQixjRDFCRixHQUFBeEIsVUFFSkEiLCJmaWxlIjoibW9kZWwvYWNjb3VudC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZmFjdG9yeSAnQWNjb3VudCcsIChQbGFuZXQpIC0+XHJcblxyXG4gIEFjY291bnQgPSAocGxhc21hTGV2ZWwgPSAwLCBnZW9sb2dpc3QgPSBmYWxzZSwgcGxhbmV0cyA9IFtdKSAtPlxyXG4gICAgQHBsYXNtYUxldmVsID0gcGxhc21hTGV2ZWxcclxuICAgIEBnZW9sb2dpc3QgPSBnZW9sb2dpc3RcclxuICAgIEBwbGFuZXRzID0gcGxhbmV0cyAjIFRoaXMgaXMgbm90IHNhZmUhXHJcbiAgICBudWxsXHJcblxyXG4gIEFjY291bnQucHJvdG90eXBlLmFkZFBsYW5ldCA9IChwbGFuZXQpIC0+XHJcbiAgICBAcGxhbmV0cy5wdXNoKHBsYW5ldClcclxuICAgIG51bGxcclxuXHJcbiAgQWNjb3VudC5wcm90b3R5cGUucmVtb3ZlUGxhbmV0ID0gKGluZGV4KSAtPlxyXG4gICAgQHBsYW5ldHMuc3BsaWNlKGluZGV4LCAxKVxyXG4gICAgbnVsbFxyXG5cclxuICBBY2NvdW50LnByb3RvdHlwZS5nZXRNZXRhbFByb2R1Y3Rpb24gPSAtPlxyXG4gICAgcHJvZHVjdGlvbiA9IDBcclxuICAgIGZvciBwbGFuZXQgaW4gQHBsYW5ldHNcclxuICAgICAgcHJvZHVjdGlvbiArPSBwbGFuZXQuZ2V0TWV0YWxQcm9kdWN0aW9uKEBwbGFzbWFMZXZlbCwgQGdlb2xvZ2lzdClcclxuICAgIHByb2R1Y3Rpb25cclxuXHJcbiAgQWNjb3VudC5wcm90b3R5cGUuZ2V0Q3J5c3RhbFByb2R1Y3Rpb24gPSAtPlxyXG4gICAgcHJvZHVjdGlvbiA9IDBcclxuICAgIGZvciBwbGFuZXQgaW4gQHBsYW5ldHNcclxuICAgICAgcHJvZHVjdGlvbiArPSBwbGFuZXQuZ2V0Q3J5c3RhbFByb2R1Y3Rpb24oQHBsYXNtYUxldmVsLCBAZ2VvbG9naXN0KVxyXG4gICAgcHJvZHVjdGlvblxyXG5cclxuICBBY2NvdW50LnByb3RvdHlwZS5nZXREZXV0ZXJpdW1Qcm9kdWN0aW9uID0gLT5cclxuICAgIHByb2R1Y3Rpb24gPSAwXHJcbiAgICBmb3IgcGxhbmV0IGluIEBwbGFuZXRzXHJcbiAgICAgIHByb2R1Y3Rpb24gKz0gcGxhbmV0LmdldERldXRlcml1bVByb2R1Y3Rpb24oQHBsYXNtYUxldmVsLCBAZ2VvbG9naXN0KVxyXG4gICAgcHJvZHVjdGlvblxyXG5cclxuICAjIyMgU1RBVElDIE1FVEhPRCAjIyNcclxuICBBY2NvdW50LmdldEZyb21KU09OID0gKGpzb25PYmplY3QpIC0+XHJcbiAgICBpZiBqc29uT2JqZWN0P1xyXG4gICAgICBjb25zb2xlLmxvZyBcIkRhdGEgbG9hZGVkIGZyb20gcHJldmlvdXMgc2Vzc2lvblwiXHJcbiAgICAgIG5ldyBBY2NvdW50KFxyXG4gICAgICAgIGpzb25PYmplY3QucGxhc21hTGV2ZWwsXHJcbiAgICAgICAganNvbk9iamVjdC5nZW9sb2dpc3QsXHJcbiAgICAgICAgKFBsYW5ldC5nZXRGcm9tSlNPTihwbGFuZXQpIGZvciBwbGFuZXQgaW4ganNvbk9iamVjdC5wbGFuZXRzKVxyXG4gICAgICApXHJcbiAgICBlbHNlIG5ldyBBY2NvdW50KClcclxuXHJcbiAgcmV0dXJuIEFjY291bnQiLG51bGxdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==