module.factory("Planet",function(){var Planet;return Planet=function(name,coordinates,maxTemp){return null==name&&(name=""),null==coordinates&&(coordinates=[0,0,0]),null==maxTemp&&(maxTemp=0),this.name=name,this.coordinates=coordinates,this.maxTemp=maxTemp,this.metalMine=0,this.crystalMine=0,this.deuteriumMine=0,this.metalBonus=0,this.crystalBonus=0,this.deuteriumBonus=0,null},Planet.prototype.getMetalProduction=function(plasma,geologist){var baseStat,bonusMultiplier,geoMultiplier,naturalGeneration,production;return null==plasma&&(plasma=0),null==geologist&&(geologist=!1),bonusMultiplier=1+.1*this.metalBonus,geoMultiplier=geologist?1.1:1,naturalGeneration=30,baseStat=30*this.metalMine*Math.pow(1.1,this.metalMine),production=baseStat*bonusMultiplier*geoMultiplier,Math.ceil(production+baseStat*plasma*.01)+naturalGeneration},Planet.prototype.getCrystalProduction=function(plasma,geologist){var baseStat,bonusMultiplier,geoMultiplier,naturalGeneration,production;return null==plasma&&(plasma=0),null==geologist&&(geologist=!1),bonusMultiplier=1+.1*this.crystalBonus,geoMultiplier=geologist?1.1:1,naturalGeneration=15,baseStat=20*this.crystalMine*Math.pow(1.1,this.crystalMine),production=baseStat*bonusMultiplier*geoMultiplier,Math.ceil(production+baseStat*plasma*.0066-.5)+naturalGeneration},Planet.prototype.getDeuteriumProduction=function(plasma,geologist){var baseStat,bonusMultiplier,geoMultiplier,production;return null==geologist&&(geologist=!1),bonusMultiplier=1+.1*this.deuteriumBonus,geoMultiplier=geologist?1.1:1,baseStat=10*this.deuteriumMine*Math.pow(1.1,this.deuteriumMine)*(1.44-.004*this.maxTemp),production=baseStat*bonusMultiplier*geoMultiplier,Math.ceil(production)},Planet.getFromJSON=function(jsonObject){var planet;return null!=jsonObject?(planet=new Planet(jsonObject.name,jsonObject.coordinates,jsonObject.maxTemp),planet.metalMine=jsonObject.metalMine,planet.crystalMine=jsonObject.crystalMine,planet.deuteriumMine=jsonObject.deuteriumMine,planet.metalBonus=jsonObject.metalBonus,planet.crystalBonus=jsonObject.crystalBonus,planet.deuteriumBonus=jsonObject.deuteriumBonus,planet):new Planet},Planet});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVsL3BsYW5ldC5jb2ZmZWUiLCJtb2RlbC9wbGFuZXQuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZmFjdG9yeSIsIlBsYW5ldCIsIm5hbWUiLCJjb29yZGluYXRlcyIsIm1heFRlbXAiLCJ0aGlzIiwibWV0YWxNaW5lIiwiY3J5c3RhbE1pbmUiLCJkZXV0ZXJpdW1NaW5lIiwibWV0YWxCb251cyIsImNyeXN0YWxCb251cyIsImRldXRlcml1bUJvbnVzIiwicHJvdG90eXBlIiwiZ2V0TWV0YWxQcm9kdWN0aW9uIiwicGxhc21hIiwiZ2VvbG9naXN0IiwiYmFzZVN0YXQiLCJib251c011bHRpcGxpZXIiLCJnZW9NdWx0aXBsaWVyIiwibmF0dXJhbEdlbmVyYXRpb24iLCJwcm9kdWN0aW9uIiwiTWF0aCIsInBvdyIsImNlaWwiLCJnZXRDcnlzdGFsUHJvZHVjdGlvbiIsImdldERldXRlcml1bVByb2R1Y3Rpb24iLCJnZXRGcm9tSlNPTiIsImpzb25PYmplY3QiLCJwbGFuZXQiXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPQyxRQUFRLFNBQVUsV0FFdkIsR0FBQUMsT0FvREEsT0FwREFBLFFBQVMsU0FBQ0MsS0FBV0MsWUFBdUJDLFNDbUIxQyxNQWxCWSxPQUFSRixPRERJQSxLQUFPLElDSUksTUFBZkMsY0RKZUEsYUFBZSxFQUFFLEVBQUUsSUNPdkIsTUFBWEMsVURQc0NBLFFBQVUsR0FDcERDLEtBQUNILEtBQU9BLEtBQ1JHLEtBQUNGLFlBQWNBLFlBQ2ZFLEtBQUNELFFBQVVBLFFBQ1hDLEtBQUNDLFVBQVksRUFDYkQsS0FBQ0UsWUFBYyxFQUNmRixLQUFDRyxjQUFnQixFQUNqQkgsS0FBQ0ksV0FBYSxFQUNkSixLQUFDSyxhQUFlLEVBQ2hCTCxLQUFDTSxlQUFpQixFQUNsQixNQUVGVixPQUFPVyxVQUFVQyxtQkFBcUIsU0FBQ0MsT0FBWUMsV0FDakQsR0FBQUMsVUFBQUMsZ0JBQUFDLGNBQUFDLGtCQUFBQyxVQ3FCQSxPQVhjLE9BQVZOLFNEWGlDQSxPQUFTLEdDYzdCLE1BQWJDLFlEZDZDQSxXQUFZLEdBQzdERSxnQkFBa0IsRUFBa0IsR0FBZFosS0FBQ0ksV0FDdkJTLGNBQW1CSCxVQUFlLElBQVMsRUFDM0NJLGtCQUFvQixHQUNwQkgsU0FBVyxHQUFLWCxLQUFDQyxVQUFZZSxLQUFLQyxJQUFJLElBQUtqQixLQUFDQyxXQUM1Q2MsV0FBY0osU0FBV0MsZ0JBQW1CQyxjQUM1Q0csS0FBS0UsS0FBS0gsV0FBYUosU0FBV0YsT0FBUyxLQUFRSyxtQkFFckRsQixPQUFPVyxVQUFVWSxxQkFBdUIsU0FBQ1YsT0FBWUMsV0FDbkQsR0FBQUMsVUFBQUMsZ0JBQUFDLGNBQUFDLGtCQUFBQyxVQzRCQSxPQVhjLE9BQVZOLFNEbEJtQ0EsT0FBUyxHQ3FCL0IsTUFBYkMsWURyQitDQSxXQUFZLEdBQy9ERSxnQkFBa0IsRUFBb0IsR0FBaEJaLEtBQUNLLGFBQ3ZCUSxjQUFtQkgsVUFBZSxJQUFTLEVBQzNDSSxrQkFBb0IsR0FDcEJILFNBQVcsR0FBS1gsS0FBQ0UsWUFBY2MsS0FBS0MsSUFBSSxJQUFLakIsS0FBQ0UsYUFDOUNhLFdBQWNKLFNBQVdDLGdCQUFtQkMsY0FDNUNHLEtBQUtFLEtBQUtILFdBQWFKLFNBQVdGLE9BQVMsTUFBUyxJQUFPSyxtQkFFN0RsQixPQUFPVyxVQUFVYSx1QkFBeUIsU0FBQ1gsT0FBUUMsV0FDakQsR0FBQUMsVUFBQUMsZ0JBQUFDLGNBQUFFLFVDK0JBLE9BUGlCLE9BQWJMLFlEekI2Q0EsV0FBWSxHQUM3REUsZ0JBQWtCLEVBQXNCLEdBQWxCWixLQUFDTSxlQUN2Qk8sY0FBbUJILFVBQWUsSUFBUyxFQUMzQ0MsU0FBVyxHQUFLWCxLQUFDRyxjQUFnQmEsS0FBS0MsSUFBSSxJQUFLakIsS0FBQ0csZ0JBQWtCLEtBQU8sS0FBUUgsS0FBQ0QsU0FDbEZnQixXQUFjSixTQUFTQyxnQkFBaUJDLGNBQ3hDRyxLQUFLRSxLQUFLSCxhQUdabkIsT0FBT3lCLFlBQWMsU0FBQ0MsWUFDcEIsR0FBQUMsT0FBQSxPQUFHLE9BQUFELFlBQ0RDLE9BQWEsR0FBQTNCLFFBQ1gwQixXQUFXekIsS0FDWHlCLFdBQVd4QixZQUNYd0IsV0FBV3ZCLFNBRWJ3QixPQUFPdEIsVUFBWXFCLFdBQVdyQixVQUM5QnNCLE9BQU9yQixZQUFjb0IsV0FBV3BCLFlBQ2hDcUIsT0FBT3BCLGNBQWdCbUIsV0FBV25CLGNBQ2xDb0IsT0FBT25CLFdBQWFrQixXQUFXbEIsV0FDL0JtQixPQUFPbEIsYUFBZWlCLFdBQVdqQixhQUNqQ2tCLE9BQU9qQixlQUFpQmdCLFdBQVdoQixlQUNuQ2lCLFFBQ08sR0FBQTNCLFNBRUpBIiwiZmlsZSI6Im1vZGVsL3BsYW5ldC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZmFjdG9yeSAnUGxhbmV0JywgLT5cclxuXHJcbiAgUGxhbmV0ID0gKG5hbWUgPSBcIlwiLCBjb29yZGluYXRlcyA9IFswLDAsMF0sIG1heFRlbXAgPSAwKSAtPlxyXG4gICAgQG5hbWUgPSBuYW1lXHJcbiAgICBAY29vcmRpbmF0ZXMgPSBjb29yZGluYXRlc1xyXG4gICAgQG1heFRlbXAgPSBtYXhUZW1wXHJcbiAgICBAbWV0YWxNaW5lID0gMFxyXG4gICAgQGNyeXN0YWxNaW5lID0gMFxyXG4gICAgQGRldXRlcml1bU1pbmUgPSAwXHJcbiAgICBAbWV0YWxCb251cyA9IDBcclxuICAgIEBjcnlzdGFsQm9udXMgPSAwXHJcbiAgICBAZGV1dGVyaXVtQm9udXMgPSAwXHJcbiAgICBudWxsXHJcblxyXG4gIFBsYW5ldC5wcm90b3R5cGUuZ2V0TWV0YWxQcm9kdWN0aW9uID0gKHBsYXNtYSA9IDAsIGdlb2xvZ2lzdCA9IGZhbHNlKSAtPlxyXG4gICAgYm9udXNNdWx0aXBsaWVyID0gMSArIEBtZXRhbEJvbnVzICogMC4xXHJcbiAgICBnZW9NdWx0aXBsaWVyID0gaWYgZ2VvbG9naXN0IHRoZW4gMS4xIGVsc2UgMVxyXG4gICAgbmF0dXJhbEdlbmVyYXRpb24gPSAzMFxyXG4gICAgYmFzZVN0YXQgPSAzMCAqIEBtZXRhbE1pbmUgKiBNYXRoLnBvdygxLjEsIEBtZXRhbE1pbmUpXHJcbiAgICBwcm9kdWN0aW9uID0gKGJhc2VTdGF0ICogYm9udXNNdWx0aXBsaWVyKSAqIGdlb011bHRpcGxpZXJcclxuICAgIE1hdGguY2VpbChwcm9kdWN0aW9uICsgYmFzZVN0YXQgKiBwbGFzbWEgKiAwLjAxKSArIG5hdHVyYWxHZW5lcmF0aW9uXHJcblxyXG4gIFBsYW5ldC5wcm90b3R5cGUuZ2V0Q3J5c3RhbFByb2R1Y3Rpb24gPSAocGxhc21hID0gMCwgZ2VvbG9naXN0ID0gZmFsc2UpIC0+XHJcbiAgICBib251c011bHRpcGxpZXIgPSAxICsgQGNyeXN0YWxCb251cyAqIDAuMVxyXG4gICAgZ2VvTXVsdGlwbGllciA9IGlmIGdlb2xvZ2lzdCB0aGVuIDEuMSBlbHNlIDFcclxuICAgIG5hdHVyYWxHZW5lcmF0aW9uID0gMTVcclxuICAgIGJhc2VTdGF0ID0gMjAgKiBAY3J5c3RhbE1pbmUgKiBNYXRoLnBvdygxLjEsIEBjcnlzdGFsTWluZSlcclxuICAgIHByb2R1Y3Rpb24gPSAoYmFzZVN0YXQgKiBib251c011bHRpcGxpZXIpICogZ2VvTXVsdGlwbGllclxyXG4gICAgTWF0aC5jZWlsKHByb2R1Y3Rpb24gKyBiYXNlU3RhdCAqIHBsYXNtYSAqIDAuMDA2NiAtIDAuNSkgKyBuYXR1cmFsR2VuZXJhdGlvblxyXG5cclxuICBQbGFuZXQucHJvdG90eXBlLmdldERldXRlcml1bVByb2R1Y3Rpb24gPSAocGxhc21hLCBnZW9sb2dpc3QgPSBmYWxzZSkgLT5cclxuICAgIGJvbnVzTXVsdGlwbGllciA9IDEgKyBAZGV1dGVyaXVtQm9udXMgKiAwLjFcclxuICAgIGdlb011bHRpcGxpZXIgPSBpZiBnZW9sb2dpc3QgdGhlbiAxLjEgZWxzZSAxXHJcbiAgICBiYXNlU3RhdCA9IDEwICogQGRldXRlcml1bU1pbmUgKiBNYXRoLnBvdygxLjEsIEBkZXV0ZXJpdW1NaW5lKSAqICgxLjQ0IC0gMC4wMDQgKiBAbWF4VGVtcClcclxuICAgIHByb2R1Y3Rpb24gPSAoYmFzZVN0YXQqYm9udXNNdWx0aXBsaWVyKSpnZW9NdWx0aXBsaWVyXHJcbiAgICBNYXRoLmNlaWwocHJvZHVjdGlvbilcclxuXHJcbiAgIyMjIFNUQVRJQyBNRVRIT0QgIyMjXHJcbiAgUGxhbmV0LmdldEZyb21KU09OID0gKGpzb25PYmplY3QpIC0+XHJcbiAgICBpZiBqc29uT2JqZWN0P1xyXG4gICAgICBwbGFuZXQgPSBuZXcgUGxhbmV0KFxyXG4gICAgICAgIGpzb25PYmplY3QubmFtZSxcclxuICAgICAgICBqc29uT2JqZWN0LmNvb3JkaW5hdGVzLFxyXG4gICAgICAgIGpzb25PYmplY3QubWF4VGVtcFxyXG4gICAgICApXHJcbiAgICAgIHBsYW5ldC5tZXRhbE1pbmUgPSBqc29uT2JqZWN0Lm1ldGFsTWluZVxyXG4gICAgICBwbGFuZXQuY3J5c3RhbE1pbmUgPSBqc29uT2JqZWN0LmNyeXN0YWxNaW5lXHJcbiAgICAgIHBsYW5ldC5kZXV0ZXJpdW1NaW5lID0ganNvbk9iamVjdC5kZXV0ZXJpdW1NaW5lXHJcbiAgICAgIHBsYW5ldC5tZXRhbEJvbnVzID0ganNvbk9iamVjdC5tZXRhbEJvbnVzXHJcbiAgICAgIHBsYW5ldC5jcnlzdGFsQm9udXMgPSBqc29uT2JqZWN0LmNyeXN0YWxCb251c1xyXG4gICAgICBwbGFuZXQuZGV1dGVyaXVtQm9udXMgPSBqc29uT2JqZWN0LmRldXRlcml1bUJvbnVzXHJcbiAgICAgIHBsYW5ldFxyXG4gICAgZWxzZSBuZXcgUGxhbmV0KClcclxuXHJcbiAgcmV0dXJuIFBsYW5ldCIsbnVsbF0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9